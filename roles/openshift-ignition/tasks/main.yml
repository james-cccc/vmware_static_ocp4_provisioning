---
# tasks file for createigns

- name: Ensure apache is running
  systemd:
    state: started
    name: httpd
  become: true

- name: Remove any previous installation directory
  file:
    path: "{{ cluster_config_dir }}"
    state: absent

- name: Ensure a installation directory exists
  file:
    path: "{{ cluster_config_dir }}"
    state: directory
    mode: '0775'

- name: Generate install config
  template:
    src: install-config.yaml.j2
    dest: "{{ cluster_config_dir }}/install-config.yaml"
    mode: '0644'

- name: Generate the ignition manifests
  command: "openshift-install create manifests --dir={{ cluster_config_dir }}"

- name: Ammend manifests
  lineinfile:
    path: "{{ cluster_config_dir }}/manifests/cluster-scheduler-02-config.yml"
    regexp: "^  mastersSchedulable"
    line: "  mastersSchedulable: false"

- name: Ensure that the worker machineset and machine manifests are absent
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ cluster_config_dir }}/openshift/99_openshift-cluster-api_master-machines-0.yaml"
    - "{{ cluster_config_dir }}/openshift/99_openshift-cluster-api_master-machines-1.yaml"
    - "{{ cluster_config_dir }}/openshift/99_openshift-cluster-api_master-machines-2.yaml"
    - "{{ cluster_config_dir }}/openshift/99_openshift-cluster-api_worker-machineset-0.yaml"

- name: Generate the ignition configs
  command: "openshift-install create ignition-configs --dir={{ cluster_config_dir }}"

- name: Copy ignitiob file to web server
  copy:
    src: "{{ cluster_config_dir }}/bootstrap.ign"
    dest: /var/www/html/bootstrap.ign
    owner: apache
    group: apache
    mode: '0644'
  become: true

- name: Create output directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0775
  with_items:
    - "{{ cluster_config_dir }}/ignitions"
    - "{{ cluster_config_dir }}/ifcfgs"

- name: Generate nodes network configuration files
  template:
    src: ifcfg-ens192.j2
    dest: "{{ cluster_config_dir }}/ifcfgs/{{ item.hostname }}.ifcfg"
    mode: '0644'
  with_items: "{{ nodes }}"

- name: Generate bootstrap network configuration file
  template:
    src: ifcfg-ens192.j2
    dest: "{{ cluster_config_dir }}/ifcfgs/{{ item.hostname }}.ifcfg"
    mode: '0644'
  with_items: "{{ bootstrap }}"

- name: Generate NTP config file
  template:
    src: chrony.conf.j2
    dest: "{{ cluster_config_dir }}/ifcfgs/chrony.conf"
    mode: '0644'

- name: Get base64 encoded CA string
  command: grep -oP 'base64,\K[^"]+' "{{ cluster_config_dir }}"/master.ign
  register: base64castring

- name: Generate nodes modified ignition files
  template:
    src: node-ign.j2
    dest: "{{ cluster_config_dir }}/ignitions/{{ item.hostname }}.ign"
    mode: '0644'
  with_items: "{{ nodes }}"

- name: Generate bootstrap modified ignition file
  template:
    src: append-bootstrap-ign.j2
    dest: "{{ cluster_config_dir }}/ignitions/{{ item.hostname }}.ign"
    mode: '0644'
  with_items: "{{ bootstrap }}"

- name: Ensure kubeconfig is set
  lineinfile:
    path: ~/.bash_profile
    regexp: '^export =KUBECONFIG'
    line: export KUBECONFIG={{ cluster_config_dir }}/auth/kubeconfig
